import React, { useState } from 'react';
import {
  View, Text, TextInput, Button,
  Alert, StyleSheet, ScrollView
} from 'react-native';
import { Picker } from '@react-native-picker/picker';
import { addHeadOfficer } from '../services/apiService';

const AddOfficer = ({ navigation }: any) => {
  const [numberId, setNumberId] = useState('');
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [role, setRole] = useState('Officer');
  const [zoneId, setZoneId] = useState('');

  const handleSubmit = async () => {
    if (numberId.length !== 13) {
      Alert.alert('‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', 'Number ID ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 13 ‡∏´‡∏•‡∏±‡∏Å');
      return;
    }

    try {
      const payload = {
        numberId,
        firstName,
        lastName,
        role,
        zoneId: zoneId ? parseInt(zoneId) : 0
      };

      await addHeadOfficer(payload);
      Alert.alert('‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
      navigation.goBack();
    } catch (error) {
      console.error('‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
      Alert.alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ');
    }
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.title}>‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà</Text>

      <TextInput
        style={styles.input}
        placeholder="üÜî Number ID (13 ‡∏´‡∏•‡∏±‡∏Å)"
        value={numberId}
        onChangeText={setNumberId}
        keyboardType="number-pad"
      />
      <TextInput
        style={styles.input}
        placeholder="üë§ First Name"
        value={firstName}
        onChangeText={setFirstName}
      />
      <TextInput
        style={styles.input}
        placeholder="üë• Last Name"
        value={lastName}
        onChangeText={setLastName}
      />

      <Text style={styles.label}>üéñ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Role</Text>
      <View style={styles.pickerWrapper}>
        <Picker
          selectedValue={role}
          onValueChange={(value) => setRole(value)}
        >
          <Picker.Item label="Officer" value="Officer" />
          <Picker.Item label="Technician" value="Technician" />
        </Picker>
      </View>

      <TextInput
        style={styles.input}
        placeholder="üìç Zone ID (‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà = 0)"
        value={zoneId}
        onChangeText={setZoneId}
        keyboardType="number-pad"
      />

      <View style={styles.buttonContainer}>
        <Button title="üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" color="#1976d2" onPress={handleSubmit} />
      </View>
    </ScrollView>
  );
};

export default AddOfficer;

const styles = StyleSheet.create({
  container: {
    padding: 20,
    backgroundColor: '#e3f2fd',
    flexGrow: 1,
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#0d47a1',
    marginBottom: 25,
    textAlign: 'center',
  },
  input: {
    borderWidth: 1,
    borderColor: '#90caf9',
    backgroundColor: '#fff',
    padding: 12,
    borderRadius: 8,
    marginBottom: 15,
    fontSize: 16,
  },
  label: {
    marginBottom: 6,
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
  },
  pickerWrapper: {
    borderWidth: 1,
    borderColor: '#90caf9',
    borderRadius: 8,
    backgroundColor: '#fff',
    marginBottom: 20,
  },
  buttonContainer: {
    marginTop: 10,
  },
});
